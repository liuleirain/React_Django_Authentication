{"version":3,"sources":["containers/Home.js","actions/auth.js","actions/types.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","components/Navbar.js","hocs/Layout.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js"],"names":["Home","className","to","role","load_user","dispatch","a","localStorage","getItem","config","headers","Authorization","accept","axios","get","process","res","type","payload","data","connect","state","isAuthenticated","auth","login","email","password","body","JSON","stringify","post","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","signup","re_password","accountCreated","setAccountCreated","verify","uid","token","match","verified","setVerified","style","marginTop","onClick","params","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","logout","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","checkAuthenticated","Accept","code","props","useEffect","children","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.083d1070.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => (\r\n  <div className=\"container\">\r\n    <div className=\"jumbotron mt-5\">\r\n      <h1 className=\"display-4\">Welcome to Auth System!</h1>\r\n      <p className=\"lead\">\r\n        This is an incredible authentication system with production level\r\n        features!\r\n      </p>\r\n      <hr className=\"my-4\" />\r\n      <p>Click the Log In button</p>\r\n      <Link className=\"btn btn-primary btn-lg\" to=\"login\" role=\"button\">\r\n        Login\r\n      </Link>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED_SUCCESS,\r\n  USER_LOADED_FAIL,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAIL,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_FAIL,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  ACTIVATION_SUCCESS,\r\n  ACTIVATION_FAIL,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\nimport axios from \"axios\";\r\n\r\nexport const checkAuthenticated = () => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n      token: localStorage.getItem(\"access\"),\r\n    });\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}/auth/jwt/varigy`,\r\n        body,\r\n        config\r\n      );\r\n\r\n      if (res.data.code !== \"token_not_valid\") {\r\n        dispatch({\r\n          type: AUTHENTICATED_SUCCESS,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: AUTHENTICATED_FAIL,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: AUTHENTICATED_FAIL,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: AUTHENTICATED_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const load_user = () => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n        accept: \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/auth/users/me/`,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: USER_LOADED_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: USER_LOADED_FAIL,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: USER_LOADED_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email, password });\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/auth/jwt/create/`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(load_user());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const signup = (name, email, password, re_password) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ name, email, password, re_password });\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/auth/users/`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: SIGNUP_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(load_user());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: SIGNUP_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const verify = (uid, token) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ uid, token });\r\n\r\n  try {\r\n    await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/auth/users/activation/`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ACTIVATION_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ACTIVATION_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const reset_password = (email) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email });\r\n\r\n  try {\r\n    await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/auth/users/reset_password/`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: PASSWORD_RESET_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PASSWORD_RESET_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const reset_password_confirm = (\r\n  uid,\r\n  token,\r\n  new_password,\r\n  re_new_password\r\n) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n  try {\r\n    await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PASSWORD_RESET_CONFIRM_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAIL = \"SIGNUP_FAIL\";\r\nexport const ACTIVATION_SUCCESS = \"ACTIVATION_SUCCESS\";\r\nexport const ACTIVATION_FAIL = \"ACTIVATION_FAIL\";\r\nexport const USER_LOADED_SUCCESS = \"USER_LOADED_SUCCESS\";\r\nexport const USER_LOADED_FAIL = \"USER_LOADED_FAIL\";\r\nexport const AUTHENTICATED_SUCCESS = \"AUTHENTICATED_SUCCESS\";\r\nexport const AUTHENTICATED_FAIL = \"AUTHENTICATED_FAIL\";\r\nexport const PASSWORD_RESET_SUCCESS = \"PASSWORD_RESET_SUCCESS\";\r\nexport const PASSWORD_RESET_FAIL = \"PASSWORD_RESET_FAIL\";\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = \"PASSWORD_RESET_CONFIRM_FAIL\";\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = \"PASSWORD_RESET_CONFIRM_SUCCESS\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Sign In</h1>\r\n      <p>Sign into your Account</p>\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary\" type=\"submit\">\r\n          Login\r\n        </button>\r\n      </form>\r\n      <p className=\"mt-3\">\r\n        Don't have an account? <Link to=\"/signup\">Sign Up</Link>\r\n      </p>\r\n      <p className=\"mt-3\">\r\n        Forgot your Password? <Link to=\"reset-password\">Reset Password</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signup } from \"../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n  const [accountCreated, setAccountCreated] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    re_password: \"\",\r\n  });\r\n\r\n  const { name, email, password, re_password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password === re_password) {\r\n      signup(name, email, password, re_password);\r\n      setAccountCreated(true);\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (accountCreated) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Sign Up</h1>\r\n      <p>Create your Account</p>\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"password\"\r\n            name=\"re_password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={re_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary\" type=\"submit\">\r\n          Register\r\n        </button>\r\n      </form>\r\n      <p className=\"mt-3\">\r\n        Already have an account? <Link to=\"/signup\">Sign In</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignup.propTypes = {\r\n  signup: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { signup })(Signup);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { verify } from \"../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Activate = ({ verify, match }) => {\r\n  const [verified, setVerified] = useState(false);\r\n\r\n  const verify_account = (e) => {\r\n    const uid = match.params.uid;\r\n    const token = match.params.token;\r\n    verify(uid, token);\r\n    setVerified(true);\r\n  };\r\n\r\n  if (verified) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div\r\n        className=\"d-flex flex-column justify-content-center align-items-center\"\r\n        style={{ marginTop: \"200px\" }}\r\n      >\r\n        <h1>Verify your Account</h1>\r\n        <button\r\n          onClick={verify_account}\r\n          style={{ marginTop: \"50px\" }}\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n        >\r\n          Verify\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nActivate.propTypes = {\r\n  verify: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password } from \"../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ResetPassword = ({ reset_password }) => {\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  const { email } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    reset_password(email);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  if (requestSent) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Request Password Reset</h1>\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary\" type=\"submit\">\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nResetPassword.propTypes = {\r\n  reset_password: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset_password_confirm } from \"../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    new_password: \"\",\r\n    re_new_password: \"\",\r\n  });\r\n\r\n  const { new_password, re_new_password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const uid = match.params.uid;\r\n    const token = match.params.token;\r\n\r\n    reset_password_confirm(uid, token, new_password, re_new_password);\r\n    setRequestSent(true);\r\n  };\r\n\r\n  if (requestSent) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"password\"\r\n            name=\"new_password\"\r\n            placeholder=\"New Password\"\r\n            value={new_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"password\"\r\n            name=\"re_new_password\"\r\n            placeholder=\"Confirm New Password\"\r\n            value={re_new_password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary\" type=\"submit\">\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nResetPasswordConfirm.propTypes = {\r\n  reset_password_confirm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logout } from \"../actions/auth\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = ({ logout, isAuthenticated }) => {\r\n  const guestLinks = () => {\r\n    return (\r\n      <Fragment>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/login\">\r\n            Login\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link className=\"nav-link\" to=\"/signup\">\r\n            Sign Up\r\n          </Link>\r\n        </li>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const authLinks = () => {\r\n    return (\r\n      <Fragment>\r\n        <li>\r\n          <a onClick={logout} href=\"#!\" className=\"nav-link\">\r\n            Logout\r\n          </a>\r\n        </li>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Auth System\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <Link className=\"nav-link active\" to=\"/\">\r\n            Home <span className=\"sr-only\">(current)</span>\r\n          </Link>\r\n          {isAuthenticated ? authLinks() : guestLinks()}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React, { useEffect } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { checkAuthenticated, load_user } from \"../actions/auth\";\r\n\r\nconst Layout = (props) => {\r\n  useEffect(() => {\r\n    props.checkAuthenticated();\r\n    props.load_user();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED_SUCCESS,\r\n  USER_LOADED_FAIL,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAIL,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_FAIL,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  ACTIVATION_SUCCESS,\r\n  ACTIVATION_FAIL,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  access: localStorage.getItem(\"access\"),\r\n  refresh: localStorage.getItem(\"refresh\"),\r\n  isAuthenticated: null,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case AUTHENTICATED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"access\", payload.access);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        access: payload.access,\r\n        refresh: payload.refresh,\r\n      };\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    case USER_LOADED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n      };\r\n    case AUTHENTICATED_FAIL:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    case USER_LOADED_FAIL:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    case LOGIN_FAIL:\r\n    case SIGNUP_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"access\");\r\n      localStorage.removeItem(\"refresh\");\r\n      return {\r\n        ...state,\r\n        access: null,\r\n        refresh: null,\r\n        isAuthenticated: false,\r\n        user: null,\r\n      };\r\n    case PASSWORD_RESET_SUCCESS:\r\n    case PASSWORD_RESET_FAIL:\r\n    case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n    case PASSWORD_RESET_CONFIRM_FAIL:\r\n    case ACTIVATION_SUCCESS:\r\n    case ACTIVATION_FAIL:\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"./containers/Home\";\r\nimport Login from \"./containers/Login\";\r\nimport Signup from \"./containers/Signup\";\r\nimport Activate from \"./containers/Activate\";\r\nimport ResetPassword from \"./containers/ResetPassword\";\r\nimport ResetPasswordConfirm from \"./containers/ResetPasswordConfirm\";\r\n\r\nimport Layout from \"./hocs/Layout\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Layout>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/signup\" component={Signup} />\r\n            <Route exact path=\"/reset-password\" component={ResetPassword} />\r\n            <Route\r\n              exact\r\n              path=\"/password/reset/confirm/:uid/:token\"\r\n              component={ResetPasswordConfirm}\r\n            />\r\n            <Route exact path=\"/activate/:uid/:token\" component={Activate} />\r\n          </Switch>\r\n        </Layout>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}